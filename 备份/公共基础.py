"""
公共基础
1.操作系统的分类
    1.多道批处理操作系统分时操作系统
    2.分时时操作系统                     多用户使用，相互独立，速度快
    3.实时操作系统                       单系统
    4.网络操作系统
    5.分布式操作系统                     多系统网络互联而的系统（需要多台计算机完成的工作）
    6.嵌入式操作系统                     小巧

2.进程管理
    1.并发程序
        1.特点
            1.没有封闭性
                1.执行结果与执行的相对速度有关
                2.某一程序的变量可能被另一程序改变
                3.程序中的变量在另一程序中输出，不同时刻输出值可能不同
                注：顺序程序：封闭，执行结果与时间无关
            2.程序与其执行过程不是一一对应的
                注：顺序程序：程序与其执行过程完全相同
            3.程序并发执行可以相互制约
                注：顺序程序：程序之间完全独立
    2.进程：程序在数据集上的一次执行过程
        1.进程的状态
            1.创建         从无到有（创建进程控制块PCB）
            2.就绪         可以运行（拥有除cpu以外的所有资源，当获取cpu占用权就转入运行状态）
            3.运行         占用cpu（拥有cpu使用权，无法运行将放弃cpu转为等待状态）
            4.等待         阻塞，等待资源满足（没有问题将跳过等待）
            5.终止         从有到无
        2.进程状态转化
        3.进程控制块(PCB )
            1.每个进程都要有一个PCB
    3.算法：高效解决问题的方法和步骤（或有限指令集，对特定问题求解步骤的有有限制令）
        1.特点
            1.输入性
                算法有输入，但不一定有
            2.输出性，
                输出结果
            3.有穷性
                1.有限时间内结束
                2.算法执行有限步骤后结束
                3.无死循环
            4.确定性
                每条指令的含义明确，无歧义
            5.可行性
                每条指令都是可以执行的
        2.算法评价
            1.时间复杂度
                1.不需要统计每条语句的执行时间（不等于花费的时间按）
                2.关键语句的执行次数
            2.最坏时间复杂度
            3.最优时间复杂度
            4.空间复杂度：执行所占用的内存空间
        3.数据结构
            1.数据结构分类
                1.逻辑结构
                    1.集合结构
                    2.线性结构
                    3.树型结构
                    4.图型结构
                2.物理结构
                    1.顺序储存结构
                    2.链式储存结构
                    3.索引储存结构
                    4.散列储存结构
                3.关系
                    1.逻辑结构不存在，物理结构存在
                    2.先逻辑后物理
                    3.一个逻辑结构可以对应多种物理结构
                4.其他
                    1.线性表：线性储存结构
                    2.顺序表：顺序储存结构
            2.队列：先进先出（用线性结构，循环队列除外）
                1.循环队列（采用顺序存储结构）：     元数个数 对尾r-对头f（如果小于0，加上对列的容量），当=0时是空队列
                2.栈（线性结构）：                只能在一头进行插入和删除（不需要改变栈底指针），具有记忆作用
                3.队列：                        一头插入另一头删除
            3.线性链表：是线性表的链式存储结构（可以有多种储存结构），双向链表是线性结构

            4.树（非线性结构）空树（树形结构也是非线性结构）
                1.介绍
                    1.节点：            元素
                    2.叶子节点：         尾节点
                    3.孩子节点：         直接后继节点（跟随其后的节点）
                    4.双亲节点/父节点：   直接前驱节点（跟随其前的节点）
                    5.兄弟节点：         双亲相同的节点
                    6.度（子节点）：      直接后继的个数
                    7.树的度            所有节点度中的最大值
                    8.层次             节点所在的层数（一般根是第一层）
                    9.树的深度（高度）    所有节点层数的最大值
                2. 二叉树（树型结构）
                    1.特点
                        1.每个节点的度小于等于2
                        2.孩子节点分为左右孩子
                    2.性质
                        1.第x层最有2**x-1个节点
                        2.高度为y时，最多有2**y-1个节点
                        3.叶子节点比度为2的节点多一个
                3.特殊二叉树
                    1.满二叉树：每层节点都达到最大值
                    2.完全二叉树：满二叉树的基础上可以少节点
                        1.最底层的可以少
                        2.从右向左可以少（右有节点则左一定有节点）
                        3.按层编号（由上到下，由左到右）
                        4.度为1的节点可能有0或1个
                        5.具有N个节点的完全二叉树的深度为[log2**N]+1，取整再加1
            5.二叉树的遍历
                1.先序遍历（将一颗树分为根，左子树（根的左孩子节点一下所包含的所有节点），右子树）
                    1.步骤
                        1.访问根节点（输出根节点）
                        2.访问左子树（输出左子树上的所有节点）（以左子树为对象先访问其根节点，按先序遍历再输出所有节点，以此类推）
                        3.访问右子树（输出右子树上的所有节点）（以右子树为对象先访问其根节点，按先序遍历再输出所有节点，以此类推）
                2.中序遍历
                    1.访问左子树（输出左子树上的所有节点）（以左子树为对象先访问其左子树，按中序遍历再输出所有节点，以此类推）
                    2.访问根节点（输出根节点）
                    3.访问右子树（输出右子树上的所有节点）（以右子树为对象先访问其左子树，按中序遍历再输出所有节点，以此类推）
                3.后序遍历
                    1.访问左子树（输出左子树上的所有节点）（以左子树为对象先访问其左子树，按后序遍历再输出所有节点，以此类推）
                    2.访问右子树（输出右子树上的所有节点）（以右子树为对象先访问其左子树，按后序遍历再输出所有节点，以此类推）
                    3.访问根节点（输出根节点）
3.查找
    1.顺序查找
        1.有N个数时
            1.平均查找长度为（N+1）/2
        2.适用于任何结构（万能）
    2.二分查找
        1.使用前提
            1.必须为顺序储存
            2.必须有序（升序或降序）
        1.查找难度（有N个元素时）
            最优：1
            最坏：[log2**N]+1  # []里的要取整  小于顺序查找
4.排序（对目标数据元素进行升序或降序排序）
    1.简单插入排序，冒泡排序
        1.比较次数
            最好（所有元素已经排序好了）：N-1
            最坏（元素与排序反序）：N(N-1)/2
        2.希尔排序，堆排序
            1.比较次数
                最好最坏：o(Nlog2**N)
        4.快速排序
            1.比较次数
                最好：o(Nlog2**N)
                最坏：N(N-1)/2
        5.选择排序
            1.比较次数
                最好最坏：N(N-1)/2
5.程序设计基础
    1.程序设计的方法和风格
        1.清晰第一，效率第二
        2.可读性好
        3.有必要的注释（文档化）
        4.输入数据前有必要的提示
        5.避免滥用goto语句
    2.结构化程序设计
        1.基本结构
            1.顺序结构
            2.分支结构（选择结构）
            3.循环结构（重复结构）
        2.原则和方法
            1.自顶向下
            2.划分模块
            3.局部求精
            4.格式化编码
    3.面向对象程序设计
        1.面向对象的基本思想（oop）
        2.面向对象的基本概念
            1.对象
                1.特征
                    1.标识唯一性
                    2.分类性
                    3.封装性
                    4.多态性
                    5.模块独立性
            2.属性
            3.方法
            4.类
            5.继承
            6.消息
            7.多态性
        3.总结
            1.对象由属性和方法组成
            2.类是对象的集合
            3.继承是基于类的
            4.消息是基于对象的
            5.多态性是基于方法的
6.软件工程基础
    1.软件
        1.软件的定义和特点
            1.软件是由程序，数据，相关文档的集合
        2.软件的分类
            1.系统软件
                1.操作系统
                2.语言处理程序
                3.数据管理系统（DBMS）
            2.其他软件
    2.软件生命周期
        1.三大步骤（背）
            1.定义阶段
                1.可行性研究
                2.需求分析（对用户的需求分析）
                    阶段工作
                        1.需求获取
                        2.需求分析
                        3.编写需求规格说明书（成果）
                        4.需求评审
                    需求分析方法
                        1.结构化分析方法（重点）
                    结构化分析常用工具
                        1.数据流图（重点）：DFD图
                            元素结构
                                1.箭头：数据流
                                2.圆或椭圆：加工
                                3.双杠：数据储存
                                4.方框：数据源点或终点
                        2.数据字典（掌握）是对数据流图的补充
            2.开发阶段
                3.概要设计
                    成果
                        1.设计文档
                    使用工具
                        1.就构图（SC图）
                4.详细设计
                    使用工具（第一个重点，其他的记住简称）
                        1.程序流程图
                            元素结构
                                1.椭圆（起止框）：开始或结束
                                2.方框（处理框）：计算或处理
                                3.斜方框（判断框）：判断或分支
                                4.箭头（流程线）：程序流程线
                        2.盒图（N-S图）
                        3.问题分析图（PAD图）
                        4.判定表
                        5.伪代码（PDL）
                5.编码实现
                6.软件测试
                    软件测试的目的
                        测试：是为了发现错误而执行程序的过程
                        1.发现错误（不是证明程序没有错误）
                    软件测试的原则
                        1.所有的测试都应该追溯到用户需求（需求分析说明书是依据）
                        2.尽早测试
                        3.由第三方测试
                        4.穷举测试是不可能的
                    软件测试的技术和方法
                        1.静态测试（不在计算机上执行，通过人工分析和计算机辅助分析）
                        2.动态测试（也称机器测试，在计算机上运行）
                            1.白盒测试
                                1.测试者必须理解软件的结构和内部功能代码
                                基本原则：程序内每种可能的路径都必须执行一次
                            2.黑盒测试（也称功能测试）测试者不需要理解软件的结构和内部功能代码，根据软件的功能来测试
                                分类
                                    1.等价类划分法
                                    2.边界值分析法
                                    3.猜测法
                    测试过程（记住先后顺序）
                        1.单元测试
                        2.集成测试
                        3.确认测试
                        4.系统测试
                            程序调试（也叫排错）
                                1.目的
                                    对发现的错误进行修改
                                2.任务
                                    找到错误的位置，进行修改和排错
                                3.步骤
                                    1.错误定位
                                    2.修改设计和代码
                                    3.进行回归测试
            3.维护阶段
                7.使用于维护
                    1.维护的分类
                        1.纠错性维护
                        2.适应性维护
                        3.完善性维护
                        4.预防性维护
                8.淘汰
7.数据库基础
    1.数据库（DB，储存在计算机内有组织的可共享的数据集合）
        特点
        1.数据有结构
        2.数据独立性高
        3.共享性高
        4.冗余度低
    2.数据库管理系统（DBMS，系统软件）
        功能
        1.数据库定义功能
        2.数据操纵功能（增 删 改 查）
        3.数据库运行管理功能
        4.数据库维护功能
        5.通信功能
    3.数据库系统
        1.包含
            1.计算机软硬件支持环境
            2.数据库
            3.DBMS（核心）
            4.数据库管理员（DBA）
            5.应用程序
        2.特点
            1.统一管理的结构化数据
            2.数据冗余度小
            3.数据共享性高
            4.数据独立性高
        3.数据库结构体系
            1.三级模式
                1.概念模式
                2.外模式
                3.内模式
            2.二级映射
                外模式<---->概念模式<---->内模式
            3.实体联系模型（E-R图）
                1.元素含义
                    1.长方形：实体
                    2.椭圆：属性
                    3.菱形：实体间的联系
            4.基本数据模型
                1.层次模型：树形
                2.网状模型：网，交叉
                3.关系模型：表，关系
    4.关系运算
        1.分类
            1.交
            2.并
            3.差
            4.笛卡尔积（乘，*）：结果行增加，列增加
            5.选择：列不变，行减少
            6.投影：行不变，列减少
            7.连接
8.补充
    1.缓冲技术：提高信息交换速度
    2.整数在计算机中用补码表示
    3.正数的原码，反码，补码相同
    4.反码：对除了符号位，其他各位数取反
    5.补码：反码最后一位加1
    6.偏移码：符号位取反
    7.寄存器用于暂存当前正在执行的指令
    8.
"""